@page "/"

@inject IDialogService DialogService
@inject Blazored.LocalStorage.ILocalStorageService localStorage



<MudGrid Justify="Justify.SpaceAround">
    <MudItem>
            @* profile pic *@
            <MudCard Elevation="5" Style="border-radius:200px;max-height:260px; max-width:260px; margin-left: -50px; margin-bottom:50px;  ">
                <MudImage Fluid="true" Style="border-radius:200px;max-height:250px; margin-left:7px; margin-top:3.5px; margin-right:3.5px;" ObjectPosition="ObjectPosition.Center" Elevation="3" Src="/images/aaron.jpg"></MudImage>
            </MudCard>
    </MudItem>
    <MudItem xs="12" sm="12" md="6">
        <div>
            <br />
            <h1 class="introtext headingText">Hello &amp; Welcome</h1>
            <br />
            <h2 class="introtext">My name is Aaron</h2>
            <br />
            <span class="introtext">
                I am an experienced .NET developer, using Razor, MVC, Blazor, and various front-end frameworks like Bootstrap, React and
                Angular.
                Proficient with MySQL and MSSQL as well as ORMs such as Entity Framework, Dapper, and Django.
                A Leader of multiple projects from architecture to development, debugging, delivery and maintenance.
                I believe that Information gathering and analyzing clients' needs to understand the entire programming process is key to a successful project. Above all, I believe that there is no puzzle that can't be solved with clear and open communication and some quizzical investigation.
            </span>
        </div>
    </MudItem>

</MudGrid>

@code{





    protected override async Task OnAfterRenderAsync(bool firstRender)
        {

        var cookieContent = await localStorage.GetItemAsync<string>("cookieName");
       

        if(cookieContent == null)
            {
                
                OpenDialog();
                await localStorage.SetItemAsync("cookieName","Gonna put the username here.");
            }
        else
            {
            Console.WriteLine("We have a cookie with contents: " + cookieContent);
            }

        }
    private void OpenDialog()
        {
            
        var options = new DialogOptions { CloseOnEscapeKey = true , DisableBackdropClick = true };
       
        DialogService.Show<FirstRenderModal>("Welcome !",options);
        }

}

<style>
    .introtext {
        color:white;
    }
    
    .headingText {
        font-size:48px;
    }
</style>